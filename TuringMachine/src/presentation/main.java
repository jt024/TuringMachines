/*
 *  @author Johnny Trevino
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;

import javax.swing.JFrame;
import javax.swing.*;
import java.io.*;
import java.util.*;
import data.Instruction;
import data.Link;
import data.TuringMachine;
import tools.Counter;

/**
* The main interface between program and user
* 
* @version 2.3
* @author Johnny Trevino
*/
public class main extends javax.swing.JFrame {
    StringBuilder sb,rc = new StringBuilder();
    TuringMachine tm;
    public int currentState = 1, numChars, states, head;
    Instruction[] instructions;
    TuringMachine tape;
    char[] characters;
    Counter counter;
    
    public JFrame frame = new JFrame();
    public String fileName = "src\\resource\\Assignment_Instructions";
//    private static final Byte NULL = 0, ZERO = 1, ONE = 2, LEFT = -1, RIGHT = 1, HALT = -1;
//    private int m_HEAD = 0, m_STATE = 0;
//    private ArrayList<Byte> TAPE = new ArrayList<Byte>();
//    private ArrayList<State> STATES = new ArrayList<State>();    
    /**
     * Creates new form main
     */
    public main() {
        initComponents();
        assignment();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jRadioButton3 = new javax.swing.JRadioButton();
        bnStart = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta2User = new javax.swing.JTextArea();
        pnRule = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfChange2State = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfDirection = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        bnCreateRule = new javax.swing.JButton();
        tfCurrentState = new javax.swing.JTextField();
        tfCurrentValue = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbRuleCount = new javax.swing.JLabel();
        bnAddChar = new javax.swing.JButton();
        tfAddChar = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lbCharacterCount = new javax.swing.JLabel();
        tfValueChange = new javax.swing.JTextField();
        pnTape = new javax.swing.JPanel();
        bnAddTape = new javax.swing.JButton();
        tfTape = new javax.swing.JTextField();
        pnExecute = new javax.swing.JPanel();
        bnExecute = new javax.swing.JButton();

        jRadioButton3.setText("jRadioButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bnStart.setText("Get Started");
        bnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnStartActionPerformed(evt);
            }
        });

        ta2User.setColumns(20);
        ta2User.setLineWrap(true);
        ta2User.setRows(5);
        jScrollPane1.setViewportView(ta2User);

        jLabel4.setText(",");

        jLabel6.setText(",");

        jLabel7.setText("(");

        jLabel8.setText(",");

        bnCreateRule.setText("Create Rule");
        bnCreateRule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnCreateRuleActionPerformed(evt);
            }
        });

        jLabel1.setText("=");

        jLabel2.setText("(");

        jLabel3.setText(")");

        jLabel5.setText(")");

        bnAddChar.setText("Add Character");
        bnAddChar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnAddCharActionPerformed(evt);
            }
        });

        tfAddChar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAddCharActionPerformed(evt);
            }
        });

        jLabel9.setText("Remaining Rules");

        jLabel10.setText("Remaining Characters");

        javax.swing.GroupLayout pnRuleLayout = new javax.swing.GroupLayout(pnRule);
        pnRule.setLayout(pnRuleLayout);
        pnRuleLayout.setHorizontalGroup(
            pnRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnRuleLayout.createSequentialGroup()
                .addGroup(pnRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(pnRuleLayout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lbCharacterCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(pnRuleLayout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lbRuleCount, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnRuleLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfCurrentState, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfCurrentValue, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfChange2State, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfValueChange, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnRuleLayout.createSequentialGroup()
                                .addComponent(tfAddChar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bnAddChar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnRuleLayout.createSequentialGroup()
                                .addComponent(tfDirection, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bnCreateRule, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pnRuleLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {tfAddChar, tfChange2State, tfCurrentState, tfCurrentValue, tfDirection});

        pnRuleLayout.setVerticalGroup(
            pnRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnRuleLayout.createSequentialGroup()
                .addGroup(pnRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(lbRuleCount, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(pnRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(lbCharacterCount, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfAddChar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bnAddChar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfChange2State, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel6)
                        .addComponent(jLabel8)
                        .addComponent(tfDirection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(bnCreateRule)
                        .addComponent(tfValueChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfCurrentState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jLabel4)
                        .addComponent(tfCurrentValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnRuleLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {bnAddChar, bnCreateRule});

        pnRuleLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lbCharacterCount, lbRuleCount, tfAddChar, tfChange2State, tfCurrentState, tfCurrentValue, tfDirection});

        bnAddTape.setText("Add Tape");
        bnAddTape.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnAddTapeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnTapeLayout = new javax.swing.GroupLayout(pnTape);
        pnTape.setLayout(pnTapeLayout);
        pnTapeLayout.setHorizontalGroup(
            pnTapeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bnAddTape, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tfTape)
        );
        pnTapeLayout.setVerticalGroup(
            pnTapeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTapeLayout.createSequentialGroup()
                .addComponent(bnAddTape)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfTape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        bnExecute.setText("Execute");
        bnExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnExecuteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnExecuteLayout = new javax.swing.GroupLayout(pnExecute);
        pnExecute.setLayout(pnExecuteLayout);
        pnExecuteLayout.setHorizontalGroup(
            pnExecuteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnExecuteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bnExecute, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnExecuteLayout.setVerticalGroup(
            pnExecuteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bnExecute)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnRule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnTape, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnExecute, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bnStart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnTape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnExecute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addComponent(pnRule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnStartActionPerformed
        getStates();
        getCharacters();
        characters = new char[numChars];
        instructions = new Instruction[states*numChars];
        
        ta2User.setText("There will be "+ states +" states"
                + " and "
                + numChars+" characters \nThat is"
                + " gives you a maximum of "
                + (states*numChars)+" rules to work with.\n"
                + "When you run out of the lines below "
                + "you are out of rules");
        int rules = numChars*states;
        System.out.println(rules);
//        TuringMachine tm = new TuringMachine(numChars, states);
        counter = new Counter(rules, numChars);
        lbRuleCount.setText(counter.getRBar());
        lbCharacterCount.setText(counter.getCBar());
        pnRule.setVisible(true);
    }//GEN-LAST:event_bnStartActionPerformed

    private void bnCreateRuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnCreateRuleActionPerformed
        if (tm==null) {
            tm = new TuringMachine(numChars*states);
        }
        if (checkRules()<0)
            return;
//        pnExecute.setVisible(true);
        // current
        int cs = Integer.parseInt(tfCurrentState.getText());
        char cv = tfCurrentValue.getText().charAt(0);
        
        // change to this
        char vc = tfValueChange.getText().charAt(0);
        int sc = Integer.parseInt(tfChange2State.getText());
        String dir = tfDirection.getText();;
        
        tm.addRule(new Instruction(cs,cv,sc,vc,dir));
        
//        instructions[counter.getRCount()-1] = new Instruction(cs,cv,sc,vc,dir);
       
        ta2User.setText(tm.rToString());
//        ta2User.append("\n\n\n\nOnce all the rules are entered you and you have a tape\n"
//                + "you can run the machine");
        
        counter.decRBar();
        
        lbRuleCount.setText(counter.getRBar());
        tfCurrentState.setText("");
        tfCurrentValue.setText("");
        tfValueChange.setText("");
        tfChange2State.setText("");
        tfDirection.setText("");
        tfCurrentState.requestFocus();
        
        

        
        
    }//GEN-LAST:event_bnCreateRuleActionPerformed

    private void bnAddCharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnAddCharActionPerformed
        if (counter.getCCount()<1) {
            ta2User.setText("Sorry you have already entered "+numChars+" characters");
            return;
        }
        pnTape.setVisible(true);
        characters[counter.getCCount()-1] = tfAddChar.getText().charAt(0);
        ta2User.setText(String.valueOf(characters[counter.getCCount()-1]));
        counter.decCBar();
        lbCharacterCount.setText(counter.getCBar());
        tfAddChar.setText("");
        tfAddChar.requestFocus();
        
//        System.out.println(characters[cCount-1]);
               
        
    }//GEN-LAST:event_bnAddCharActionPerformed

    private void tfAddCharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAddCharActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAddCharActionPerformed

    private void bnAddTapeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnAddTapeActionPerformed
        String tapeIn = tfTape.getText();
        char[] temp = tapeIn.toCharArray();
        
        for(char b : temp){
            tm.addTape(new Link(b));
        }
        System.out.println(tm.tToString());
        
        
    }//GEN-LAST:event_bnAddTapeActionPerformed

    private void bnExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnExecuteActionPerformed
        tm.runOnce();
        ta2User.setText(tm.tToString());
    }//GEN-LAST:event_bnExecuteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bnAddChar;
    private javax.swing.JButton bnAddTape;
    private javax.swing.JButton bnCreateRule;
    private javax.swing.JButton bnExecute;
    private javax.swing.JButton bnStart;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCharacterCount;
    private javax.swing.JLabel lbRuleCount;
    private javax.swing.JPanel pnExecute;
    private javax.swing.JPanel pnRule;
    private javax.swing.JPanel pnTape;
    private javax.swing.JTextArea ta2User;
    private javax.swing.JTextField tfAddChar;
    private javax.swing.JTextField tfChange2State;
    private javax.swing.JTextField tfCurrentState;
    private javax.swing.JTextField tfCurrentValue;
    private javax.swing.JTextField tfDirection;
    private javax.swing.JTextField tfTape;
    private javax.swing.JTextField tfValueChange;
    // End of variables declaration//GEN-END:variables


    
    public void assignment(){
        pnRule.setVisible(false);
        pnTape.setVisible(false);
//        pnExecute.setVisible(false);
        String line;
        
        try {
            FileReader fileReader = 
                new FileReader(fileName);

            // wraps FileReader in BufferedReader.
            BufferedReader bufferedReader = 
                new BufferedReader(fileReader);
            int lcount = 0;
            while((line = bufferedReader.readLine()) != null) {
                lcount++;
                ta2User.append(line);
                if (lcount%2==0) {
                    ta2User.append("\n");
                }
                else{
                    ta2User.append("\t");
                }
                
            }   
            // close file
            bufferedReader.close();         
        }
        catch(FileNotFoundException ex) {
            System.out.println(
                "Unable to open file '" + 
                fileName + "'");                
        }
        catch(IOException ex) {
            System.out.println(
                "Error reading file '" 
                + fileName + "'");                  
            // Or we could just do this: 
            // ex.printStackTrace();
        }
    }   
    
    public void getStates(){
        // ask user for number of characters
        states = Integer.parseInt(JOptionPane.showInputDialog(
        frame, 
        "Enter the total number of states", 
        "STATES", 
        JOptionPane.WARNING_MESSAGE)
        );
    }
    // ask user for number of characters
    public void getCharacters(){
        numChars = Integer.parseInt(JOptionPane.showInputDialog(            
            frame, 
            "Enter the total number of characters", 
            "Characters", 
            JOptionPane.WARNING_MESSAGE)
        );
    }    
    
    public int checkRules(){
        if (counter.getRCount()<1) {
            ta2User.setText("Sorry man you use all the possible rules!");
            return-1;
        }
        
        if (Integer.parseInt(tfCurrentState.getText())>states || Integer.parseInt(tfCurrentState.getText())< 1) {
            ta2User.setText("Sorry, the starting state of that rule needs to\n"
                    + "be between 0 and "+states);
            return-1;
        }
        
        return 1;
    }
    

    

    

    
    
}
